<?php
	include 'ajax_connection.php';
	$functionName = Input::get("functionName");
	$functionName();


	function sendMail($fromEmail='',$fromName='',$email = [], $subject='', $body = '', $altbody ='',$replyTo=''){
		$mail = new PHPMailer;
		//$mail->SMTPDebug = 3;                               // Enable verbose debug output

		$mail->isSMTP();                                      // Set mailer to use SMTP
		$mail->Host = 'mail.apollosystems.com.ph';  // Specify main and backup SMTP servers
		$mail->SMTPAuth = true;                               // Enable SMTP authentication
		$mail->Username = '_mainaccount@apollosystems.com.ph';                 // SMTP username
		$mail->Password = '409186963@StephenWang';                           // SMTP password
		$mail->SMTPSecure = 'tls';                            // Enable TLS encryption, `ssl` also accepted
		$mail->Port = 25;                                    // TCP port to connect to
		$mail->setFrom('_mainaccount@apollosystems.com.ph', $fromName);
		if(count($email) > 0){
			foreach($email as $e){
				$mail->addAddress($e, 'test ');
			}
		}

		// Add a recipient              // Name is optional
		$mail->addReplyTo($replyTo, '');

		// Optional name
		$mail->isHTML(true);                                  // Set email format to HTML

		$mail->Subject = $subject;
		$mail->Body    = $body;
		$mail->AltBody = $altbody;

		if(!$mail->send()) {
			return false;
			//echo 'Mailer Error: ' . $mail->ErrorInfo;
		} else {
			return true;
		}

	}
	function emailSupplier(){
		$email = Input::get('email');
		$subject = Input::get('subject');
		$html = Input::get('html');

		$email_arr = [];
		if(strpos($email,",")){
			$email_arr = explode(',',$email);
		} else {
			$email_arr[] = $email;
		}
		$div = "<html>";
		$div .="<head><link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css' integrity='sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u' crossorigin='anonymous'></head>";
		$div .="<body>$html</body>";

	echo	$div .= "</html>";
		$res_mail  = sendMail(
			"",
			"AutoGenerated Email",
			$email_arr,
			$subject,
			$div,
			"",
			""
		);
	}

	function deleteSupplierItem(){
		$id = Input::get('id');
		$sup = new Supplier_order_details();
		$sup->deleteItem($id);
		echo "Item deleted successfully.";
	}
	function updateSupplierItem(){
		$items = Input::get('items');
		$items = json_decode($items);
		$sup = new Supplier_order_details();
		if($items){
			foreach($items as $item){
				$sup->update(['qty'=> $item->qty],$item->id);
			}
			echo "Update completed successfully.";
		}

	}
	function addSupplierToOrder(){
		$supplier_id = Input::get('id');
		$item_id = Input::get('item_id');
		$qty = Input::get('qty');
		$user = new User();
		$sup = new Supplier_order_details();
		$time = time();
		$sup->create(
			['supplier_item_id' => $item_id,
			'qty' => $qty,
			'is_active' => 1,
			'created' => $time,
			'modified' => $time,
			'company_id' => $user->data()->company_id,
			'supplier_order_id' =>$supplier_id
			]
		);
		echo "Added Successfully.";
	}

	function getReturned(){
		$supplier_order_id = Input::get('id');


		$od = new Supplier_order($supplier_order_id);
		$details = $od->getOrderDetails($supplier_order_id);
		$user = new User();
		$arr = [];
		if($details){
			foreach($details as $dt){
				$dt->qty = formatQuantity($dt->qty,true);
				$arr[] = $dt;
			}
		}

		echo json_encode($arr);

	}


	function changeStatusSupOrder(){
		$id = Input::get('id');
		$status = Input::get('status');
		$ret_msg = Input::get('ret_msg');
		$user = new User();
		$sup = new Supplier_order($id);
		$ret_msg = ($ret_msg) ? $ret_msg : '';
		$time = date('m/d/Y H:i:s A');
		if($status == 2 && $sup->data()->status == 0){
			$msg = "Approved by "  . ucwords($user->data()->firstname .  " " . $user->data()->lastname);
		} else if ($status == 0 && $sup->data()->status == -1){
			$msg = "Resend by "  . ucwords($user->data()->firstname .  " " . $user->data()->lastname);
		} else if ($status == 1 && $sup->data()->status == 2){
			$msg = "Processed by"  . ucwords($user->data()->firstname .  " " . $user->data()->lastname);
		} else if ($status == -1){
			$msg = "Returned by "  . ucwords($user->data()->firstname .  " " . $user->data()->lastname);
		} else if ($status == 99){
			$msg = "Declined by "  . ucwords($user->data()->firstname .  " " . $user->data()->lastname);
		}
		if($sup->data()->timelog){
			$timelog = json_decode($sup->data()->timelog);
			$timelog[] = ['time' => $time,'message' => $msg];
		} else{
			$timelog = [];
			$timelog[] = ['time' => $time,'message' => $msg];
		}
		$sup->update(['status' => $status,'timelog' => json_encode($timelog),'return_message' => $ret_msg],$id);

		echo "Order updated successfully.";
	}

	function upload(){
		if (!empty($_FILES)) {

			$tempFile = $_FILES['file']['tmp_name'];          //3
			$targetPath = "../uploads/" ;
			$name = "supplier_" . uniqid() ;
			$path = $_FILES['file']['name'];
			$ext = pathinfo($path, PATHINFO_EXTENSION);
			$targetFile =  $targetPath.$name . ".".$ext;  //5
			move_uploaded_file($tempFile,$targetFile); //6
			$ref_id =  Input::get('order_id');
			$title =  Input::get('title');
			$desc =  Input::get('description');
			$ref_id =  Input::get('order_id');
			$upcls = new Upload();
			$now = time();
			$user = new User();
			$upcls->create(array(
				'filename' =>$name. "." . $ext,
				'thumbnail' =>'',
				'ref_table' => 'supplier',
				'ref_id' => $ref_id,
				'company_id' => $user->data()->company_id,
				'is_active' => 1,
				'created' => $now,
				'modified' => $now,
				'tags' => '',
				'title' => $title,
				'description' => $desc
			));
		}

	}
	function getAtt(){
		$cls = new Upload();
		$user = new User();
		$ref_table = 'supplier';
		$ref_id = Input::get('id');
		$uploadedImages = $cls->getAllImage($user->data()->company_id,$ref_table,$ref_id);
		if($uploadedImages){
			$arr = [];
			foreach($uploadedImages as $u){
				$arr[] = ['url' => '../uploads/'. $u->filename, 'title' => $u->title, 'description' => $u->description];
			}
			 echo json_encode($arr);
		} else {
			echo json_encode([]);
		}
	}

	function getSupplierList(){
		$user = new User();
		$od = new Supplier_order();
		$status = Input::get('status');
		$orders_sup  = $od->getorderssup($user->data()->company_id,$status);
		$sup_receive = new Supplier_order_receive();
		$arr = [];
		if($orders_sup){
			foreach($orders_sup as $s){
				$s->created = date('m/d/Y',$s->created);

				$s->requestedBy = capitalize($s->lastname.  ", " .$s->firstname);
				$s->expected_delivery_date = (	$s->expected_delivery_date) ? date('m/d/Y',	$s->expected_delivery_date) : 'N/A';
				$s->due_date = (	$s->due_date) ? date('m/d/Y',	$s->due_date) : 'N/A';
				$s->cost = (	$s->purchase_price_manual) ? number_format($s->purchase_price_manual,2): 'N/A';
				$s->invoice = (	$s->invoice) ? $s->invoice: 'N/A';
				$s->dr = (	$s->dr) ? $s->dr: 'N/A';
				$s->cr = (	$s->cr) ? $s->cr: 'N/A';
				$s->terms = (	$s->terms) ? $s->terms: 'N/A';
				$s->po_number = (	$s->po_number) ? $s->po_number: 'N/A';

				$rec_info = $sup_receive->receiveInfo($s->id);
				$dt_list= "";

				if($rec_info){
					foreach($rec_info as $rinfo){
						$rinfo->remarks = ($rinfo->remarks) ? 'Remarks:'.$rinfo->remarks : 'Remarks:NA';
						$dt_list .= "<br>".date('m/d/Y',$rinfo->dt) ."<br><small>". $rinfo->remarks."</small> <br>";
					}
				}
				$s->date_delivered = $dt_list;
				/*$s->amount_paid = (	$s->amount_paid) ? number_format($s->amount_paid,2): 'N/A';
				$s->del_remarks = (	$s->del_remarks) ? $s->del_remarks : 'N/A';*/



				$arr[] = $s;
			}
		}

		echo json_encode($arr);
	}
	function orderCount(){
		$user = new User();
		$od = new Supplier_order();

		$orders_sup  = $od->orderCount($user->data()->company_id);
		$arr = [];
		$final = [];
		$arr_status = [0,1,2,3,4,-1,99];
		if($orders_sup){
			foreach($orders_sup as $s){
				$arr[$s->status]=$s->total;
			}

			foreach($arr_status as $a){
				$final[$a] = isset($arr[$a]) ? $arr[$a] : 0;
			}
		}

		echo json_encode($final);
	}


	function updateSupInfo(){
		$po_number = Input::get('po_number');
		$terms = Input::get('terms');
		$expected_delivery = Input::get('expected_del');
		$invoice = Input::get('invoice');
		$dr = Input::get('dr');
		$cr = Input::get('cr');
		$cost = Input::get('cost');
		$due_date = Input::get('due_date');
		$id = Input::get('id');
		$sup  = new Supplier_order();
		if($id){
			$sup->update([
				'invoice' => $invoice,
				'dr' => $dr,
				'cr' => $cr,
				'due_date' => strtotime($due_date),
				'purchase_price_manual' => $cost,
				'po_number' => $po_number,
				'terms' => $terms,
				'expected_delivery_date' => strtotime($expected_delivery),
			],$id);
			echo "Updated successfully.";
		}
	}

	function updateSupInfoRec(){

		$date_delivered = Input::get('date_delivered');
		$remarks = Input::get('remarks');

		$id = Input::get('id');
		$sup  = new Supplier_order();

		if($id){

			/*
				 $sup->update([
					'del_remarks' => $remarks,
					'date_delivered' => strtotime($date_delivered),
				],$id);
			*/

			// echo "Updated successfully.";

		}

	}

	function checkSupplierItem(){
		$sup = new Supplier_item();
		$items = Input::get('items');
		$supplier_id = Input::get('supplier_id');
		$items = json_decode($items,true);
		$user = new User();
		$with = [];
		foreach($items as $item){
			$supplier_item = new Supplier_item();
			$checker = $supplier_item->getSupplierItemId($user->data()->company_id,$supplier_id,$item);
			if(isset($checker->id) && $checker->id){
				$with[] = $item;
			}
		}
		echo json_encode($with);
	}


	function receiveHistory(){

		$id = Input::get('id');
		$sup = new Supplier_order($id);
		$rec = new Supplier_order_receive();
		$supplier = new Supplier($sup->data()->supplier_id);
		$branch = new Branch($sup->data()->branch_to);
		$details = $rec->receiveDetails($id);

		$supplier_name = $supplier->data()->name;
		$supplier_description = $supplier->data()->description;

		if($details){

			$arr_dt = [];
			$arr_details = [];

			foreach($details as $det){

				$dt = date('m/d/Y', $det->dt);

				if(!in_array($dt,$arr_dt)) $arr_dt[] = $dt;

				$arr_details[$dt][] = $det;

			}

			foreach($arr_details as $dt => $data){

				echo "<div class='panel panel-success'>";
				echo "<div class='panel-heading'>$dt</div>";
				echo "<div class='panel-body'>";
				echo "<table id='tbldt".str_replace('/','',$dt)."' class='table table-bordered'>";
				echo "<thead>";
				echo "<tr><th>Item Code</th><th>Description</th><th>Qty</th><th>Status</th></tr>";
				echo "</thead>";
				$arr_status = ['','Good','Damage'];
				echo "<tbody>";
				$rec_by = "";
				$remarks = "";

				foreach($data as $item){
					$rec_by = $item->receive_by;
					$remarks = $item->remarks;
					echo "<tr  data-status='".$arr_status[$item->status]."' data-qty='".$item->qty."' data-item_code='".$item->item_code."' data-description='".$item->description."' >
							<td class='withTopBorder'>".$item->item_code."</td>
							<td class='withTopBorder'>".$item->description."</td>
							<td class='withTopBorder'>".$item->qty."</td>
							<td class='withTopBorder'>".$arr_status[$item->status]."</td>
						</tr>";
				}

				echo "</tbody>";
				echo "</table>";
				echo "<button data-remarks='".$remarks."' data-receive_by='".$rec_by."' data-dt='".$dt."' data-branch_address='".$branch->data()->address."' data-branch='".$branch->data()->name."' data_list='".json_encode($sup->data())." data-id='$id' data-tblid='tbldt".str_replace('/','',$dt)."' data-supplier_description='".$supplier_description."' data-supplier_name='".$supplier_name."' class='btn btn-primary btnPrintReceive'>Print</button>";
				echo "</div>";
				echo "</div>";

			}

		} else {
			echo "<div class='alert alert-info'>NO record</div>";
		}


	}

	function addExpense(){
		$expense = Input::get('expense');
		$order_id = Input::get('order_id');
		$user = new User();

		if($expense){

			$expense = json_decode($expense);

			if($expense->amount && $expense->payable_to && $expense->currency){
				// add supplier expense amount
					$e = new Supplier_expense();

					$e->create(
						[
							'supplier_order_id' => $order_id,
							'payable_to' => $expense->payable_to,
							'amount' => $expense->amount,
							'currency' => $expense->currency,
							'due_date' => strtotime($expense->due_date),
							'created_at' => time(),
							'user_id' => $user->data()->id,
							'status' => 1,
						]
					);

				echo "Expense Added successfully.";

				//
			}
		}
	}

	function getExpenses(){
		$order_id = Input::get('order_id');

		$supplier_expense = new Supplier_expense();

		$list = $supplier_expense->getExpense($order_id);

		$arr = [];

		if($list){

			foreach($list as $l){

				$l->due_date = date('m/d/Y',$l->due_date);

				$arr[]= $l;

			}

		}

		echo json_encode($arr);

	}

	function getExpenseToPay(){

		$order_id = Input::get('order_id');
		$sup = new Supplier_expense();
		$expenses = $sup->getPayExpense($order_id,1);

		$list = [];

		if($expenses){
			foreach($expenses as $e){
				$e->paid_amount = number_format($e->paid_amount,2);
				$e->selected=0;
				$e->dt= date('m/d/y',$e->due_date);
				$list[] = $e;

			}
		}

		echo json_encode($list);

	}

	function addPayment(){

		$order_id = Input::get('order_id');
		$payment_info = Input::get('payment_info');
		$payment_info = json_decode($payment_info);

		$supplier_payment = new Supplier_payment();

		if($payment_info->expense_id && $payment_info->amount_to_pay){

			$sup_expense = new Supplier_expense($payment_info->expense_id);

			$sp = $supplier_payment->paidExpense($payment_info->expense_id);

			$amt = $sp->amount ? $sp->amount : 0;

			$supplier_payment->create(
				[
					'supplier_order_id' => $order_id,
					'expense_id' => $payment_info->expense_id,
					'amount' => $payment_info->amount_to_pay,
					'currency' => $payment_info->currency,
					'exchange_rate' => $payment_info->exchange_rate,
					'paid_date' => time(),
					'invoice_number' =>$payment_info->invoice_number,
					'dr_number' =>$payment_info->dr_number,
					'po_number' =>$payment_info->po_number,
				]
			);

			if($amt + $payment_info->amount_to_pay >= $sup_expense->data()->amount){
				$sup_expense->update(['status' => 2],$payment_info->expense_id);
			}

		}


		echo "Payment Inserted Successfully.";

	}

	function getPayment(){

		$order_id = Input::get('order_id');
		$supplier_payment = new Supplier_payment();

		$sp = $supplier_payment->payments($order_id);

		$arr = [];

		if($sp){

			foreach($sp as $a){
				$arr[$a->payable_to][] = $a;
			}

			foreach($arr as $n => $w){
				echo "<div class='panel panel-primary'>";
				echo "<div class='panel-heading'>Payable to: ".$n."</div>";
				echo "<div class='panel-body'>";
					echo "<div class='row'>";
					foreach($w as $i){
						echo "<div class='col-md-4'>";
						echo "<div class='panel panel-default'>";
						echo "<div class='panel-body'>";
						$invoice_number = $i->invoice_number ?  $i->invoice_number  : 'NA';
						$dr_number = $i->dr_number ?  $i->dr_number  : 'NA';
						$po_number = $i->po_number ?  $i->po_number  : 'NA';

						echo "<p><strong>Amount:</strong> ".$i->amount."</p>";
						echo "<p><strong>Currency:</strong> ".$i->currency."</p>";
						echo "<p><strong>Exchange Rate:</strong> ".$i->exchange_rate."</p>";
						echo "<p><strong>Peso Value:</strong> ". ($i->exchange_rate * $i->amount)."</p>";
						echo "<p><strong>Paid Date:</strong> ".date('m/d/Y',$i->paid_date)."</p>";
						echo "<p><strong>Invoice Number:</strong> ".$invoice_number."</p>";
						echo "<p><strong>DR Number:</strong> ".$dr_number."</p>";
						echo "<p><strong>PO number:</strong> ".$po_number."</p>";
						echo "</div>";
						echo "</div>";
						echo "</div>";
					}
					echo "</div>";
				echo "</div>";
				echo "</div>";
			}

		}


	}



